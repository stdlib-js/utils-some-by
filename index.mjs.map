{"version":3,"file":"index.mjs","sources":["../lib/some_by.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Tests whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* @param {Collection} collection - input collection\n* @param {PositiveInteger} n - number of elements\n* @param {Function} predicate - test function\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be a collection\n* @throws {TypeError} second argument must be a positive integer\n* @throws {TypeError} third argument must be a function\n* @returns {boolean} boolean indicating whether a collection contains at least `n` elements which pass a test\n*\n* @example\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ 1, 2, -3, 4, -1 ];\n*\n* var bool = someBy( arr, 2, isNegative );\n* // returns true\n*/\nfunction someBy( collection, n, predicate, thisArg ) {\n\tvar count;\n\tvar out;\n\tvar len;\n\tvar i;\n\tif ( !isCollection( collection ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a collection. Value: `%s`.', collection ) );\n\t}\n\tif ( !isPositiveInteger( n ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a positive integer. Value: `%s`.', n ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tlen = collection.length;\n\tcount = 0;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tout = predicate.call( thisArg, collection[ i ], i, collection );\n\t\tif ( out ) {\n\t\t\tcount += 1;\n\t\t\tif ( count === n ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t// Account for dynamically resizing a collection:\n\t\tlen = collection.length;\n\t}\n\treturn false;\n}\n\n\n// EXPORTS //\n\nmodule.exports = someBy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether a collection contains at least `n` elements which pass a test implemented by a predicate function.\n*\n* @module @stdlib/utils-some-by\n*\n* @example\n* var someBy = require( '@stdlib/utils-some-by' );\n*\n* function isNegative( v ) {\n*     return ( v < 0 );\n* }\n*\n* var arr = [ 1, 2, -3, 4, -1 ];\n*\n* var bool = someBy( arr, 2, isNegative );\n* // returns true\n*/\n\n// MODULES //\n\nvar someBy = require( './some_by.js' );\n\n\n// EXPORTS //\n\nmodule.exports = someBy;\n"],"names":["isCollection","require$$0","isPositiveInteger","require$$1","isPrimitive","isFunction","require$$2","format","require$$3","lib","collection","n","predicate","thisArg","count","len","i","TypeError","length","call"],"mappings":";;6VAsBA,IAAIA,EAAeC,EACfC,EAAoBC,EAAgDC,YACpEC,EAAaC,EACbC,EAASC,EA4Db,ICxCAC,EDOA,SAAiBC,EAAYC,EAAGC,EAAWC,GAC1C,IAAIC,EAEAC,EACAC,EACJ,IAAMhB,EAAcU,GACnB,MAAM,IAAIO,UAAWV,EAAQ,sEAAuEG,IAErG,IAAMR,EAAmBS,GACxB,MAAM,IAAIM,UAAWV,EAAQ,6EAA8EI,IAE5G,IAAMN,EAAYO,GACjB,MAAM,IAAIK,UAAWV,EAAQ,oEAAqEK,IAInG,IAFAG,EAAML,EAAWQ,OACjBJ,EAAQ,EACFE,EAAI,EAAGA,EAAID,EAAKC,IAAM,CAE3B,GADMJ,EAAUO,KAAMN,EAASH,EAAYM,GAAKA,EAAGN,KAElDI,GAAS,KACMH,EACd,OAAO,EAITI,EAAML,EAAWQ,OAElB,OAAO"}